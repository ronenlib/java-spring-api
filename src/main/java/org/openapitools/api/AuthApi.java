/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.14.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.PostLogin200Response;
import org.openapitools.model.PostLogin401Response;
import org.openapitools.model.PostLoginRequest;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.media.ExampleObject;
import org.springframework.lang.Nullable;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-07-27T17:46:50.636306-04:00[America/New_York]", comments = "Generator version: 7.14.0")
@Validated
@Tag(name = "auth", description = "the auth API")
public interface AuthApi {

    default AuthApiDelegate getDelegate() {
        return new AuthApiDelegate() {};
    }

    /**
     * POST /auth/login : Login to the service
     *
     * @param postLoginRequest  (required)
     * @return Login successful (status code 200)
     *         or Unauthorized (status code 401)
     */
    @Operation(
        operationId = "postLogin",
        summary = "Login to the service",
        responses = {
            @ApiResponse(responseCode = "200", description = "Login successful", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = PostLogin200Response.class))
            }),
            @ApiResponse(responseCode = "401", description = "Unauthorized", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = PostLogin401Response.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/auth/login",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<PostLogin200Response> postLogin(
        @Parameter(name = "PostLoginRequest", description = "", required = true) @Valid @RequestBody PostLoginRequest postLoginRequest
    ) {
        return getDelegate().postLogin(postLoginRequest);
    }

}
